// Generated by Apple Swift version 4.0.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import AdSupport;
@import AVFoundation;
@import Foundation;
@import ObjectiveC;
@import Dispatch;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("Personaly")








@protocol PersonalyDelegate;
@class PersonalyServerParameter;
@class PersonalyNativeAdOptions;
@class PersonalyNativeAd;
@class PersonalyNativeAdView;
@class PersonalyAdOptions;

SWIFT_CLASS("_TtC9Personaly9Personaly")
@interface Personaly : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ageKey;)
+ (NSString * _Nonnull)ageKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull genderKey;)
+ (NSString * _Nonnull)genderKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull dateOfBirthdayKey;)
+ (NSString * _Nonnull)dateOfBirthdayKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userIDKey;)
+ (NSString * _Nonnull)userIDKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <PersonalyDelegate> _Nullable delegate;)
+ (id <PersonalyDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <PersonalyDelegate> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL autoCaching;)
+ (BOOL)autoCaching SWIFT_WARN_UNUSED_RESULT;
+ (void)setAutoCaching:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isConfigured;)
+ (BOOL)isConfigured SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isConfiguring;)
+ (BOOL)isConfiguring SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isShowingAds;)
+ (BOOL)isShowingAds SWIFT_WARN_UNUSED_RESULT;
/// Configures Personaly framework.
/// \param appID Personaly Application ID.
///
/// \param parameters Additional parameters such as userID, age, gender, date of birth.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completion A closure to be executed once Personaly framework has configured.
///
+ (void)configureWithAppID:(NSString * _Nonnull)appID parameters:(NSDictionary<NSString *, id> * _Nullable)parameters queue:(dispatch_queue_t _Nonnull)queue completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Precaches campaign or HTML game to show without delay. Call this function before showing campaign or HTML game.
/// \param placementID Personaly Placement ID.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completion A closure to be executed once campaign has precached.
///
+ (void)precacheCampaignsForPlacement:(NSString * _Nonnull)placementID queue:(dispatch_queue_t _Nonnull)queue completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Shows campaign or HTML game for particular placement. Should be called in main thread.
/// \param placementID Personaly Placement ID.
///
/// \param serverParameter To pass custom server parameters for server-to-server callback.
///
/// \param completion A closure to be executed once campaign or HTML game has shown and hidden.
///
+ (void)showCampaignForPlacement:(NSString * _Nonnull)placementID serverParameter:(PersonalyServerParameter * _Nullable)serverParameter completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Shows Offer Wall. Should be called in main thread.
/// \param placementID Personaly Placement ID.
///
/// \param serverParameter To pass custom server parameters for server-to-server callback.
///
/// \param completion A closure to be executed once Offer Wall has shown and hidden.
///
+ (void)showOfferWallForPlacement:(NSString * _Nonnull)placementID serverParameter:(PersonalyServerParameter * _Nullable)serverParameter completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Checks capping for provided Placement ID.
/// \param placementID Personaly Placement ID.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completion A closure to be executed once framework got response from server.
///
+ (void)canViewForPlacement:(NSString * _Nonnull)placementID queue:(dispatch_queue_t _Nonnull)queue completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Precaches rewardable popup to show without delay. Call this function before showing rewardable popup.
/// \param placementID Personaly Placement ID.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completion A closure to be executed once rewardable popup has precached.
///
+ (void)precacheRewardablePopupTemplateWithQueue:(dispatch_queue_t _Nonnull)queue completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Shows rewardable popup. Should be called in main thread.
/// \param placementID Personaly Placement ID.
///
/// \param serverParameter To pass custom server parameters for server-to-server callback.
///
/// \param completion A closure to be executed once rewardable has shown and hidden.
///
+ (void)showRewardablePopupForPlacement:(NSString * _Nonnull)placementID serverParameter:(PersonalyServerParameter * _Nullable)serverParameter completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Get log
+ (NSString * _Nonnull)getLog SWIFT_WARN_UNUSED_RESULT;
/// Fetches Native Ad dataset from the server.
/// \param placementID Personaly Placement ID.
///
/// \param options Precaching options.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completion A closure to be executed once Native Ads precached.
///
+ (void)precacheNativeAdsForPlacement:(NSString * _Nonnull)placementID options:(PersonalyNativeAdOptions * _Nonnull)options queue:(dispatch_queue_t _Nonnull)queue completion:(void (^ _Nonnull)(NSArray<PersonalyNativeAd *> * _Nonnull, NSError * _Nullable))completion;
/// Populates PersonalyNativeAdView with appropriate content. Must be called in main thread.
/// \param view Object of class PersonalyNativeAdView.
///
/// \param nativeAd PersonalyNativeAd object.
///
/// \param options Array of objects of class PersonalyAdOptions.
///
/// \param completion A closure to be executed once PersonalyNativeAdView is populated.
///
+ (void)populateNativeAdViewWithView:(PersonalyNativeAdView * _Nonnull)view with:(PersonalyNativeAd * _Nonnull)nativeAd options:(NSArray<PersonalyAdOptions *> * _Nullable)options completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Reports click for Native Ad.
/// \param impressionID Personaly Impression ID. To get impressionID see NativeAd class.
///
/// \param serverParameter To pass custom server parameters for server-to-server callback.
///
+ (void)reportNativeAdClickWithImpressionID:(NSString * _Nonnull)impressionID serverParameter:(PersonalyServerParameter * _Nullable)serverParameter;
/// Reports impression for Native Ad.
/// \param impressionID Personaly Impression ID. To get impressionID see NativeAd class.
///
+ (void)reportNativeAdImpressionWithImpressionID:(NSString * _Nonnull)impressionID;
/// Reports that video playing was started for Native Ad Video.
/// \param impressionID Personaly Impression ID. To get impressionID see NativeAd class.
///
+ (void)reportNativeAdVideoStartedWithImpressionID:(NSString * _Nonnull)impressionID;
/// Reports that video playing was ended for Native Ad Video.
/// \param impressionID Personaly Impression ID. To get impressionID see NativeAd class.
///
+ (void)reportNativeAdVideoEndedWithImpressionID:(NSString * _Nonnull)impressionID;
/// Use this function to check is Personaly SDK has already precached campaigns for placement.
/// \param placementID Personaly Placement ID.
///
///
/// returns:
/// Boolean value.
+ (BOOL)isCampaignReadyWithPlacementID:(NSString * _Nonnull)placementID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9Personaly18PersonalyAdOptions")
@interface PersonalyAdOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP9Personaly17PersonalyDelegate_")
@protocol PersonalyDelegate
@optional
- (void)didReceiveRewardForPlacement:(NSString * _Nonnull)placementID amount:(NSInteger)amount;
- (void)didPrecacheForPlacement:(NSString * _Nonnull)placementID;
- (void)didFailPrecacheForPlacement:(NSString * _Nonnull)placementID error:(NSError * _Nullable)error;
- (void)didReceiveClickForPlacement:(NSString * _Nonnull)placementID;
- (void)didConfigure;
- (void)didFailConfigureWith:(NSError * _Nullable)error;
@end

@class NSCoder;

SWIFT_CLASS("_TtC9Personaly18PersonalyMediaView")
@interface PersonalyMediaView : UIView
@property (nonatomic, strong) PersonalyNativeAd * _Nullable nativeAd;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)play;
- (void)pause;
@end


SWIFT_CLASS("_TtC9Personaly25PersonalyMediaViewOptions")
@interface PersonalyMediaViewOptions : PersonalyAdOptions
@property (nonatomic) BOOL shouldAutoplayVideo;
@property (nonatomic) BOOL shouldLoopVideo;
@property (nonatomic) BOOL shouldMuteVideo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class PersonalyNativeAdAsset;

SWIFT_CLASS("_TtC9Personaly17PersonalyNativeAd")
@interface PersonalyNativeAd : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull adID;
@property (nonatomic, readonly, copy) NSString * _Nonnull appName;
@property (nonatomic, readonly, copy) NSString * _Nonnull storeAppID;
@property (nonatomic, readonly, copy) NSString * _Nonnull storeAppURL;
@property (nonatomic, readonly) double rating;
@property (nonatomic, readonly) NSInteger reviewsCount;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull categories;
@property (nonatomic, readonly, copy) NSString * _Nonnull appDeveloper;
@property (nonatomic, readonly, copy) NSString * _Nonnull appDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull appIconURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull trackingURL;
@property (nonatomic, readonly, strong) UIImage * _Nullable appIconImage;
@property (nonatomic, readonly, copy) NSArray<PersonalyNativeAdAsset *> * _Nonnull assets;
@property (nonatomic, readonly, copy) NSString * _Nonnull privacyPolicyURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull privacyPolicyImageURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull callToActionText;
@property (nonatomic, readonly, copy) NSString * _Nonnull impressionID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9Personaly22PersonalyNativeAdAsset")
@interface PersonalyNativeAdAsset : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull URL;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly) CGSize size;
@property (nonatomic, readonly, copy) NSString * _Nullable filePath;
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9Personaly24PersonalyNativeAdOptions")
@interface PersonalyNativeAdOptions : PersonalyAdOptions
@property (nonatomic) BOOL shouldDownloadAssets;
@property (nonatomic) NSInteger numberOfAdsToPrecache;
@property (nonatomic, copy) NSString * _Nonnull creativeType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UILabel;
@class UIButton;
@class PersonalyRatingView;

SWIFT_CLASS("_TtC9Personaly21PersonalyNativeAdView")
@interface PersonalyNativeAdView : UIView
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable iconImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable appNameLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable appDeveloperLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable appDescriptionLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable reviewsLabel;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable callToActionButton;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable imageView;
@property (nonatomic, weak) IBOutlet PersonalyMediaView * _Nullable mediaView;
@property (nonatomic, weak) IBOutlet PersonalyRatingView * _Nullable ratingView;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable privacyPolicyImageView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToWindow;
@end


SWIFT_CLASS("_TtC9Personaly19PersonalyRatingView")
@interface PersonalyRatingView : UIView
@property (nonatomic, strong) UIImage * _Nullable emptyStarImage;
@property (nonatomic, strong) UIImage * _Nullable fullStarImage;
@property (nonatomic, strong) UIImage * _Nullable halfFullStarImage;
@property (nonatomic) double rating;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9Personaly24PersonalyServerParameter")
@interface PersonalyServerParameter : PersonalyAdOptions
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end









SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
